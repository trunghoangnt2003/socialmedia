
@model PagedList.IPagedList<SocialMedia.Models.User>
@using PagedList.Mvc
@using PagedList

@{
    Layout = "_LayoutAdmin";
}

<style>
    /* Table Styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.9em;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        min-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
    }

        .table thead tr {
            background-color: #2196F3;
            color: #ffffff;
            text-align: left;
        }

        .table th,
        .table td {
            padding: 12px 15px;
        }

        .table tbody tr {
            border-bottom: 1px solid #dddddd;
        }

            .table tbody tr:nth-of-type(even) {
                background-color: #f3f3f3;
            }

            .table tbody tr:last-of-type {
                border-bottom: 2px solid #2196F3;
            }

            .table tbody tr:hover {
                background-color: #f1f1f1;
                cursor: pointer;
            }

    /* Switch Styling */
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 30px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 30px;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 24px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        transform: translateX(26px);
    }

    /* Search Input Styling */
    .search-container {
        margin: 20px 0;
    }

        .search-container input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .search-container input:focus {
                outline: none;
                border-color: #2196F3;
                box-shadow: 0 0 10px rgba(33, 150, 243, 0.5);
            }

    .pagination-container {
        display: flex;
        justify-content: right;
        margin-top: 20px;
    }

    .pagination-link {
        padding: 5px 12px;
        margin: 0 5px;
        text-decoration: none;
        background-color: #f1f1f1;
        border: 1px solid #ccc;
        border-radius: 4px;
        color: #333;
        transition: background-color 0.3s, color 0.3s;
    }

        .pagination-link:hover {
            background-color: #007bff;
            color: white;
        }

        .pagination-link.active {
            background-color: #007bff;
            color: white;
            font-weight: bold;
        }
</style>

<div class="row">
    <!-- Search Input -->
    <div class="search-container d-flex justify-content-between align-items-center" style="gap: 10px;">
        <input style="width: 85%;" type="text" id="searchByName" placeholder="Search by name..." />


        <i class="fa-solid fa-magnifying-glass" onclick="searchByName()"
           style="font-size: 28px; color: #74C0FC; display: flex; align-items: center; justify-content: center;"></i>

        <input style="width: 10%;" type="text" id="filter" placeholder="Filter by status" />
    </div>



    <!-- Table -->
    <div class="col-md-12">
        <div style="min-height: 65vh">
            <table class="table" id="userTable">
                <thead>
                    <tr>
                        <th class="col-md-2">Name</th>
                        <th class="col-md-2">Mail</th>
                        <th class="col-md-1">Phone</th>
                        <th class="col-md-1">Dob</th>
                        <th class="col-md-4">Address</th>
                        <th class="col-md-2">Status Account</th>
                    </tr>
                </thead>
                <tbody id="tableAccount">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                            <td>@Html.DisplayFor(modelItem => item.Dob)</td>
                            <td>@Html.DisplayFor(modelItem => item.Address)</td>
                            <td>
                                <label class="switch">
                                    <input type="checkbox" onclick="Toggle(this, @item.Id)" @(item.IsActive ? "checked" : "")>
                                    <span class="slider"></span>
                                </label>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div>
            <div class="" style="display: flex; justify-content: right ">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </div>

            <div class="pagination-container">
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <button class="pagination-link @(i == ViewBag.CurrentPage ? "active" : "")"
                            onclick="loadPaged(@i)">
                        @i
                    </button>
                }
            </div>
        </div>

            
    </div>
</div>

<script>
    // Toggle Functionality
    function Toggle(checkbox, itemId) {
        const isChecked = checkbox.checked;
        console.log(`Item ID: ${itemId}, Is Active: ${isChecked}`);

        var formData = new FormData();
        formData.append("id", itemId);
        formData.append("isActive", isChecked);

        fetch("/Admin/ManageAccount", {
            method: "POST",
            body: formData
        });
    }


    function loadPaged(page) {
       
        window.location.href = `./ManageAccount?page=${page}`;
    }

    function searchByName() {
        const searchValue = document.getElementById("searchByName").value;

        const formData = new FormData();
        formData.append("searchByName", searchValue);

        fetch("/Admin/ManageAccount", {
            method: "POST",
            body: formData
        })
            .then(response => response.text())
            .then(data => {
                console.log("Data " + data);
                //document.getElementById("userTable").innerHTML = data;
            });
    }


</script>