@model IEnumerable<SocialMedia.Models.User>

<style>
    /* Table Styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        margin: 25px 0;
        font-size: 0.9em;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        min-width: 400px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
    }

        .table thead tr {
            background-color: #2196F3;
            color: #ffffff;
            text-align: left;
        }

        .table th,
        .table td {
            padding: 12px 15px;
        }

        .table tbody tr {
            border-bottom: 1px solid #dddddd;
        }

            .table tbody tr:nth-of-type(even) {
                background-color: #f3f3f3;
            }

            .table tbody tr:last-of-type {
                border-bottom: 2px solid #2196F3;
            }

            .table tbody tr:hover {
                background-color: #f1f1f1;
                cursor: pointer;
            }

    /* Switch Styling */
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 30px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 30px;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 24px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        transform: translateX(26px);
    }

    /* Search Input Styling */
    .search-container {
        margin-bottom: 20px;
    }

        .search-container input {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .search-container input:focus {
                outline: none;
                border-color: #2196F3;
                box-shadow: 0 0 10px rgba(33, 150, 243, 0.5);
            }
</style>

<div class="row">
    <!-- Search Input -->
    <div class="col-md-12 search-container">
        <input type="text" id="searchInput" placeholder="Search by name..." />
    </div>

    <!-- Table -->
    <div class="col-md-12">
        <table class="table" id="userTable">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Email)</th>
                    <th>@Html.DisplayNameFor(model => model.Phone)</th>
                    <th>@Html.DisplayNameFor(model => model.Dob)</th>
                    <th>@Html.DisplayNameFor(model => model.Address)</th>
                    <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                        <td>@Html.DisplayFor(modelItem => item.Dob)</td>
                        <td>@Html.DisplayFor(modelItem => item.Address)</td>
                        <td>
                            <label class="switch">
                                <input type="checkbox" onclick="Toggle(this, @item.Id)" @(item.IsActive ? "checked" : "")>
                                <span class="slider"></span>
                            </label>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    // Toggle Functionality
    function Toggle(checkbox, itemId) {
        const isChecked = checkbox.checked;
        console.log(`Item ID: ${itemId}, Is Active: ${isChecked}`);

        var formData = new FormData();
        formData.append("id", itemId);
        formData.append("isActive", isChecked);

        fetch("/Admin/ManageAccount", {
            method: "POST",
            body: formData
        });
    }

    // Filter by Name Functionality
    document.getElementById("searchInput").addEventListener("input", function () {
        const searchValue = this.value.toLowerCase(); // Get the search input value
        const rows = document.querySelectorAll("#userTable tbody tr"); // Get all table rows

        rows.forEach(row => {
            const name = row.querySelector("td").textContent.toLowerCase(); // Get the name from the first column
            if (name.includes(searchValue)) {
                row.style.display = ""; // Show the row if the name matches
            } else {
                row.style.display = "none"; // Hide the row if the name doesn't match
            }
        });
    });
</script>